curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

--- Kubectl
curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

You can create the kops IAM user from the command line using the following:
aws iam create-group --group-name kops

aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonEC2FullAccess --group-name kops
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonRoute53FullAccess --group-name kops
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess --group-name kops
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/IAMFullAccess --group-name kops
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonVPCFullAccess --group-name kops

aws iam create-user --user-name kops

aws iam add-user-to-group --user-name kops --group-name kops

aws iam create-access-key --user-name kops

# configure the aws client to use your new IAM user
aws configure           # Use your new access and secret key here
aws iam list-users      # you should see a list of all your IAM users here

# Because "aws configure" doesn't export these vars for kops to use, we export them now
export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id)
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_acces


aws s3api create-bucket \
    --bucket prefix-example-com-state-store \
    --region us-east-1


export NAME=fleetman.k8s.local
export KOPS_STATE_STORE=s3://bucket-storage-jf2c

#Verificar zonas de dispobnibilidad
aws ec2 describe-availability-zones --region us-east-1

kops create cluster --zones us-east-1a,us-east-1b,us-east-1c,us-east-1d ${NAME}

--validate cluster
kops update cluster ${NAME} --yes

ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa

kops create secret --name ${NAME} sshpublickey admin -i ~/.ssh/id_rsa.pub

kops edit ig nodes --name ${NAME}
kops get ig --name ${NAME}

kpos update cluster ${NAME} --yes

kubectl get nodes --show-labels

kubectl get all